@page
@using Ikazuchi.Data.Models.Users
@using Ikazuchi.Web.Areas.RtcSessions.Models
@using Ikazuchi.Web.Common
@using Microsoft.AspNetCore.Identity
@model Ikazuchi.Web.Areas.RtcSessions.Pages.DetailsModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currentUser = await UserManager.GetUserAsync(User);
    var creatorUser = Model.Session.Creator;
}

@section Scripts
{
    <script src="~/js/InviteCreatePartial.js"></script>
}

<div class="jumbotron">
    <h1 class="display-4">@Html.DisplayFor(model => model.Session.Title)</h1>

    <dl class="row">
        <dt class="col-sm-2">
            Created at
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Session.CreationTime)
        </dd>

        <dt class="col-sm-2">
            Created by
        </dt>
        <dd class="col-sm-10">
            @{
                var screenName = creatorUser.ScreenName;
                if (screenName == null || screenName.Trim().Equals(""))
                {
                    screenName = creatorUser.UserName;
                }
            }
            @screenName &lt;@creatorUser.Email&gt;
        </dd>

        <dt class="col-sm-2">
            Visibility
        </dt>
        <dd class="col-sm-10">
            @if (Model.Session.Public)
            {
                <span class="badge badge-primary">Public</span>
            }
            else
            {
                <span class="badge badge-secondary">Private</span>
            }
        </dd>

        <dt class="col-sm-2 text-muted">
            Unique Id
        </dt>
        <dd class="col-sm-10 text-muted">
            <a asp-page="./Details" asp-route-id="@Model.Session.Id">@Html.DisplayFor(model => model.Session.Id)</a>
        </dd>
    </dl>

    <div>
        @if (Model.Joined)
        {
            <a class="btn btn-success" href="/Client?session=@Model.Session.Id" role="button">Connect</a>
        }
        else
        {
            <form method="post" asp-area="RtcSessions" asp-controller="Invite" asp-action="Join">
                <input type="hidden" name="sessionId" value="@Model.Session.Id"/>
                <button type="submit" class="btn btn-primary">Join</button>
            </form>
        }
        @if (creatorUser == currentUser)
        {
            // TODO: allow administrator to terminate
            <a asp-page="./Edit" asp-route-id="@Model.Session.Id" class="btn btn-secondary" role="button">Edit</a>
            <a class="btn btn-danger" asp-page="./Delete" asp-route-id="@Model.Session.Id" role="button">Delete</a>
        }
        <a asp-page="./Index" class="btn btn-outline-dark" role="button">Back to List</a>
    </div>

    <hr class="my-4">

    <p style="white-space: pre-wrap;">@Html.DisplayFor(model => model.Session.Description)</p>
</div>

@if (Model.Joined)
{
    <div>
        <h2 class="h4">Invite link</h2>
        @if (Model.ActiveInvite == null)
        {
            <!-- create new invite -->
            <form method="post" asp-controller="Invite" asp-action="Create">
                @{
                    var createInviteForm = new InviteCreateForm
                    {
                        Expires = 120,
                        SessionId = Model.Session.Id
                    };
                }

                <input type="hidden" asp-for="@createInviteForm.Expires" name="expires" id="ExpiresTotalMinute"/>
                <input type="hidden" asp-for="@createInviteForm.SessionId" name="sessionId"/>

                <div class="form-group row">
                    <span class="col-auto col-form-label">Expires in</span>

                    <input id="InviteExpireHour" class="col-sm-1 form-control" type="number" max="72" min="0"/>
                    <label for="InviteExpireHour" class="col-auto col-form-label">hours</label>

                    <input id="InviteExpireMinute" class="col-sm-1 form-control" type="number" max="60" min="0"/>
                    <label for="InviteExpireMinute" class="col-auto col-form-label">minutes</label>

                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        }
        else
        {
            <!-- show active invite -->
            <form method="post" asp-area="RtcSessions" asp-controller="Invite" asp-action="Delete">
                @{
                    var deleteInviteForm = new InviteDeleteForm
                    {
                        InviteId = Model.ActiveInvite.Id
                    };
                    var encodedInviteId = Base58Encoding.Encode(Model.ActiveInvite.Id);
                    var inviteUrl = Url.ActionLink("Accept", "Invite", new {token = encodedInviteId});
                }
                <div class="form-group row">
                    <input type="hidden" asp-for="@deleteInviteForm.InviteId" name="inviteId"/>

                    <a class="col-auto col-form-label" href="@inviteUrl">@inviteUrl</a>

                    <span class="col-auto col-form-label text-muted">
                        Expires in
                        <time class="time-ago" datetime="@Model.ActiveInvite.Expires">
                            @Html.DisplayFor(model => model.ActiveInvite.Expires)
                        </time>
                    </span>

                    <button type="submit" class="col-auto btn btn-danger">Delete</button>
                </div>
            </form>
        }
    </div>
}


<div class="table-responsive-lg">
    <h2 class="h4">Members</h2>

    <table class="table table-hover">
        @{
            var nameColumn = "col-3";
            var emailColumn = "col-4";
            var timeColumn = "col-3";
            var actionColumn = "col-1";
        }

        <thead>
        <tr class="d-flex">
            <td class="@nameColumn">Name</td>
            <td class="@emailColumn">Email</td>
            <td class="@timeColumn">Time Joined</td>
            <td class="@actionColumn"></td>
        </tr>
        </thead>

        <tbody>
        @foreach (var grant in Model.Grants)
        {
            <tr class="d-flex">
                @{
                    var hasScreenName = grant.User.ScreenName.Trim().Length > 0;
                    var grantScreenName = hasScreenName ? grant.User.ScreenName : grant.User.Email;
                }

                @if (hasScreenName || Model.Joined)
                {
                    <td class="@nameColumn">@grantScreenName</td>
                }
                else
                {
                    <td class="@nameColumn text-muted">Nameless</td>
                }

                @if (Model.Joined)
                {
                    <td class="@emailColumn">@grant.User.Email</td>
                }
                else
                {
                    <td class="@emailColumn text-muted">***</td>
                }

                <td class="@timeColumn">
                    <time class="time-ago" datetime="@grant.CreationTime">
                        @grant.CreationTime
                    </time>
                </td>

                <td class="@actionColumn">
                    @if (currentUser == creatorUser || currentUser == grant.User)
                    {
                        <form method="post" asp-controller="Invite" asp-action="Kick">
                            <input type="hidden" name="sessionId" value="@Model.Session.Id"/>
                            <input type="hidden" name="userId" value="@grant.User.Id"/>
                            <button class="btn btn-danger">
                                @if (currentUser == grant.User)
                                {
                                    @Html.Raw("Leave")
                                }
                                else
                                {
                                    @Html.Raw("Remove")
                                }
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

    <div class="alert alert-dark" role="alert">
        Users need to be a member of this session to see members&apos; Email.
    </div>
</div>